name: Release

on:
  push:
    tags:
      - 'v*' # 当推送 v 开头的 tag 时触发

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.24.5' ] 
        os: [windows, linux, darwin]
        arch: [amd64, arm64]
        exclude:
          # 排除 darwin/arm64 组合（如果你不需要）
          - os: darwin
            arch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ./go.sum
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}

      - name: Download dependencies
        run: |
          go mod download
          go mod tidy

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          mkdir -p bin
          OUTPUT="bin/{{.ProjectName}}-${{ matrix.os }}-${{ matrix.arch }}"
          if [ "${{ matrix.os }}" = "windows" ]; then
            OUTPUT="$OUTPUT.exe"
          fi
          go build -ldflags="-s -w" -o $OUTPUT .

      - name: Compress binaries
        run: |
          cd bin
          for file in *; do
            if [[ "$file" == *.exe ]]; then
              zip "${file%.exe}.zip" "$file"
            else
              tar -czvf "$file.tar.gz" "$file"
            fi
            rm "$file" # 删除原始二进制文件，只保留压缩包
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: bin/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: bin/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bin/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
